<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Young's blog]]></title>
  <subtitle><![CDATA[哀吾生之须臾，羡长江之无穷]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://youngyangyang.com/"/>
  <updated>2015-04-09T06:33:21.155Z</updated>
  <id>http://youngyangyang.com/</id>
  
  <author>
    <name><![CDATA[Young Kun]]></name>
    <email><![CDATA[297502779@qq.com]]></email>
  </author>
  
  <generator uri="http://zespia.tw/hexo/">Hexo</generator>
  
  <entry>
    <title><![CDATA[hiho1141.md]]></title>
    <link href="http://youngyangyang.com/2015/04/09/hiho1141/"/>
    <id>http://youngyangyang.com/2015/04/09/hiho1141/</id>
    <published>2015-04-09T06:31:49.000Z</published>
    <updated>2015-04-09T06:33:05.000Z</updated>
    <content type="html"><![CDATA[<h2 id="题目1141：二分-归并排序之逆序对">题目1141：二分.归并排序之逆序对</h2>
<hr>
<p>时间限制:10000ms<br>单点时限:1000ms<br>内存限制:256MB<br><strong>描述</strong><br>在上一回、上上回以及上上上回里我们知道Nettle在玩《艦これ》。经过了一番苦战之后，Nettle又获得了的很多很多的船。<br>这一天Nettle在检查自己的舰队列表：<br><img src="http://media.hihocoder.com/problem_images/20150328/14275388536115.png" title="list.png" style="width:70%;border:1px solid #ccc;padding:5px;margin:10px 0;"><br>我们可以看到，船默认排序是以等级为参数。但实际上一个船的火力值和等级的关系并不大，所以会存在A船比B船等级高，但是A船火力却低于B船这样的情况。比如上图中77级的飞龙改二火力就小于55级的夕立改二。<br>现在Nettle将按照等级高低的顺序给出所有船的火力值，请你计算出一共有多少对船满足上面提到的这种情况。<br><strong>输入</strong><br>第1行：1个整数N。N表示舰船数量, 1≤N≤100,000<br>第2行：N个整数，第i个数表示等级第i低的船的火力值a[i]，1≤a[i]≤2^31-1。<br><strong>输出</strong><br>第1行：一个整数，表示有多少对船满足“A船比B船等级高，但是A船火力低于B船”。<br><strong>样例输入</strong></p>
<blockquote>
<p>10<br>1559614248 709366232 500801802 128741032 1669935692 1993231896 369000208 381379206 962247088 237855491<br><strong>样例输出</strong><br>27</p>
</blockquote>
<h2 id="分析">分析</h2>
<p>本题的思想就是归并排序。什么时候我要写个类实现各种排序，分享一下。<br>归并排序实现一下就行了，然后再统计一下左半边比右半边大的数目，求个和。</p>
<blockquote>
<p>tip：输出的大小要是long long型，因为N最大可以取100,000，所以如果全部是逆序的话，那么就有1+2+……+99,999=自己算一下吧，应该是超过int型了。</p>
</blockquote>
<p>以下是我的代码</p>
<figure class="highlight C++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div></pre></td><td class="code"><pre><div class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;iostream&gt;</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">long</span> <span class="keyword">long</span>  mergesort(<span class="keyword">long</span> <span class="keyword">long</span>  * a, <span class="keyword">int</span> head, <span class="keyword">int</span> tail)</div><div class="line">{</div><div class="line">	<span class="keyword">if</span> (head &gt;= tail) <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">	<span class="keyword">int</span> mid = (head + tail) / <span class="number">2</span>;</div><div class="line">	<span class="keyword">long</span> <span class="keyword">long</span> ans = mergesort(a, head, mid) + mergesort(a, mid + <span class="number">1</span>, tail);<span class="comment">//归并是一种递归，所以要先做完小的，再做大的。小的的范围一定要确定好。</span></div><div class="line">	<span class="keyword">int</span> templefthead = head, temprighthead = mid + <span class="number">1</span>;</div><div class="line">	<span class="keyword">int</span> index = <span class="number">0</span>;</div><div class="line">	<span class="keyword">long</span> <span class="keyword">long</span> numberofb=<span class="number">0</span>;<span class="comment">//记录已经排序好了的后面数组中的个数，有点绕头，其实就是提示里面排好序的b数组中的元素个数</span></div><div class="line">	<span class="keyword">long</span> <span class="keyword">long</span> *b = <span class="keyword">new</span> <span class="keyword">long</span> <span class="keyword">long</span>[tail - head + <span class="number">1</span>];<span class="comment">//归并排序需要另外开辟空间</span></div><div class="line">	<span class="keyword">long</span> <span class="keyword">long</span> tempans = <span class="number">0</span>;<span class="comment">//统计本次归并总共找到的逆序对数</span></div><div class="line">	<span class="keyword">while</span> (templefthead &lt;= mid && temprighthead &lt;= tail)</div><div class="line">	{</div><div class="line">		<span class="keyword">if</span> (a[templefthead] &lt;= a[temprighthead])</div><div class="line">		{</div><div class="line">			b[index++] = a[templefthead++];</div><div class="line">			tempans += numberofb;</div><div class="line">		}</div><div class="line">		<span class="keyword">else</span></div><div class="line">		{</div><div class="line">			b[index++] = a[temprighthead++];</div><div class="line">			numberofb++;</div><div class="line">		}</div><div class="line">	}</div><div class="line">	<span class="keyword">if</span> (templefthead &gt; mid)</div><div class="line">	{</div><div class="line">		<span class="keyword">while</span> (temprighthead &lt;= tail)</div><div class="line">			b[index++] = a[temprighthead++];</div><div class="line">	}</div><div class="line">	<span class="keyword">else</span>{</div><div class="line">		<span class="keyword">while</span> (templefthead &lt;= mid)</div><div class="line">		{</div><div class="line">			b[index++] = a[templefthead++];</div><div class="line">			tempans += numberofb;</div><div class="line">		}</div><div class="line">	}</div><div class="line">	index = <span class="number">0</span>;</div><div class="line">	templefthead = head;</div><div class="line">	<span class="keyword">while</span> (templefthead &lt;= tail)</div><div class="line">		a[templefthead++] = b[index++];</div><div class="line">	<span class="keyword">return</span> (ans + tempans);</div><div class="line">}</div><div class="line"><span class="keyword">int</span> main()</div><div class="line">{</div><div class="line">	<span class="keyword">int</span> n;</div><div class="line">	<span class="built_in">cin</span> &gt;&gt; n;</div><div class="line">	<span class="keyword">long</span> <span class="keyword">long</span> *a = <span class="keyword">new</span> <span class="keyword">long</span> <span class="keyword">long</span>[n];</div><div class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</div><div class="line">		<span class="built_in">cin</span> &gt;&gt; a[i];</div><div class="line">	<span class="built_in">cout</span>&lt;&lt;mergesort(a, <span class="number">0</span>, n - <span class="number">1</span>)&lt;&lt;endl;</div><div class="line">	<span class="comment">/*for (int i = 0; i &lt; n; i++)</span></div><div class="line">		cout &lt;&lt; a[i] &lt;&lt; endl;*/</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">}</div></pre></td></tr></table></figure>

]]></content>
    <summary type="html">
    <![CDATA[<h2 id="题目1141：二分-归并排序之逆序对">题目1141：二分.归并排序之逆序对</h2>
<hr>
<p>时间限制:10000ms<br>单点时限:1000ms<br>内存限制:256MB<br><strong>描述</strong><br>在上一回、上上回以及上上]]>
    </summary>
    
      <category term="hihocoder" scheme="http://youngyangyang.com/tags/hihocoder/"/>
    
      <category term="一起刷hihocoder" scheme="http://youngyangyang.com/categories/%E4%B8%80%E8%B5%B7%E5%88%B7hihocoder/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[hiho1142]]></title>
    <link href="http://youngyangyang.com/2015/04/08/hiho1142/"/>
    <id>http://youngyangyang.com/2015/04/08/hiho1142/</id>
    <published>2015-04-08T07:20:08.000Z</published>
    <updated>2015-04-08T07:25:45.000Z</updated>
    <content type="html"><![CDATA[<h2 id="题目1142：三分-三分求极值">题目1142：三分.三分求极值</h2>
<hr>
<p>时间限制:10000ms<br>单点时限:1000ms<br>内存限制:256MB<br><strong>描述</strong><br>这一次我们就简单一点了，题目在此：<br><img src="http://media.hihocoder.com/problem_images/20150404/14281364249436.png" style="width:70%;" title="week40_1.PNG"><br>在直角坐标系中有一条抛物线y=ax^2+bx+c和一个点P(x,y)，求点P到抛物线的最短距离d。<br><strong>输入</strong><br>第1行：5个整数a,b,c,x,y。前三个数构成抛物线的参数，后两个数x,y表示P点坐标。-200≤a,b,c,x,y≤200<br><strong>输出</strong><br>第1行：1个实数d，保留3位小数(四舍五入)<br><strong>样例输入</strong></p>
<blockquote>
<p>2 8 2 -2 6<br><strong>样例输出</strong><br>2.437</p>
</blockquote>
<h2 id="分析"><strong>分析</strong></h2>
<p>我刚开始没看提示，考虑做法：假设固定点p为（x1，y1）。在抛物线上有一点q（x0，y0）在任意移动。其中满足<br> $$ y0=ax^2+bx+c<br>则我只要考虑曲线在点（x0，y0）处的切线的方向向量和向量pq的夹角是不是为90°即可。而这应该是一个只有一个0点的函数。<br>但是后来发现有问题，假设a&gt;0，这只满足点p在曲线下方区域的情况，如果点p在曲线上方，就不可以这么做了。<br>当然不是不可以做，只是需要判断，所以我就没这么做下去。而是采用了提示中的方法。<br>pq的距离函数是一个关于x0的凸函数（至于为什么是凸函数，对于一元函数来说，就是二阶导数恒大于等于0）。<br>那么采用三分法就可以解决这个问题了。这个问题的解决有两个trick：</p>
<blockquote>
<p>第一是a==0的情况，需要单独考虑，这个时候就是点到直线的距离，直接用公式就可以了<br>第二是不管是三分还是二分法都需要初始的范围，那么我的方法就是找到两个点x1和x2，使得对于其中点mid=（x1+x2）/2.<br>有f(x1)&gt;f(mid)且f(x2)&gt;f(mid)。作为初始的范围。</p>
</blockquote>
<h2 id="以下是我的代码"><strong>以下是我的代码</strong></h2>
<figure class="highlight C++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div></pre></td><td class="code"><pre><div class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;iostream&gt;</span></div><div class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;math.h&gt;<span class="comment">//g++里sqrt需要include这个头文件</span></span></div><div class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;iomanip&gt;<span class="comment">//格式化输出需要include这个头文件</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"></div><div class="line"><span class="keyword">double</span> distances(<span class="keyword">const</span> <span class="keyword">double</span> a, <span class="keyword">const</span> <span class="keyword">double</span> b, <span class="keyword">const</span> <span class="keyword">double</span> c, <span class="keyword">const</span> <span class="keyword">double</span> x, <span class="keyword">const</span> <span class="keyword">double</span> y, <span class="keyword">double</span> xx)</div><div class="line">{</div><div class="line">	<span class="keyword">double</span> temp[<span class="number">5</span>];</div><div class="line">	temp[<span class="number">0</span>] = <span class="number">1</span>;</div><div class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; <span class="number">5</span>; i++)</div><div class="line">		temp[i] = temp[i - <span class="number">1</span>] * xx;</div><div class="line">	<span class="keyword">return</span> (a*a*temp[<span class="number">4</span>] + <span class="number">2</span> * a*b*temp[<span class="number">3</span>] + (<span class="number">1</span> + b*b + <span class="number">2</span> * a*c - <span class="number">2</span> * y*a)*temp[<span class="number">2</span>] + (-<span class="number">2</span> * x + <span class="number">2</span> * b*c - <span class="number">2</span> * b*y)*xx + x*x + c*c + y*y - <span class="number">2</span> * c*y);</div><div class="line">}</div><div class="line"><span class="keyword">double</span> tri(<span class="keyword">const</span> <span class="keyword">double</span> a,<span class="keyword">const</span> <span class="keyword">double</span> b,<span class="keyword">const</span> <span class="keyword">double</span> c,<span class="keyword">const</span> <span class="keyword">double</span> x,<span class="keyword">const</span> <span class="keyword">double</span> y,<span class="keyword">double</span> x1, <span class="keyword">double</span> x2)</div><div class="line">{</div><div class="line">	<span class="keyword">double</span> len = x2 - x1;</div><div class="line">	<span class="keyword">double</span> lm = x1 + len / <span class="number">3</span>;</div><div class="line">	<span class="keyword">double</span> rm = x2 - len / <span class="number">3</span>;</div><div class="line">	<span class="keyword">if</span> (rm - lm &lt; <span class="number">0.001</span>) <span class="keyword">return</span> (rm + lm) / <span class="number">2</span>;</div><div class="line">	<span class="keyword">double</span> dlm = distances(a, b, c, x, y, lm);</div><div class="line">	<span class="keyword">double</span> rlm = distances(a, b, c, x, y, rm);</div><div class="line">	<span class="keyword">if</span> (dlm == rlm) <span class="keyword">return</span> tri(a, b, c, x, y, lm, rm);</div><div class="line">	<span class="keyword">if</span> (dlm &lt; rlm) <span class="keyword">return</span> tri(a, b, c, x, y, x1, rm);</div><div class="line">	<span class="keyword">else</span> <span class="keyword">return</span> tri(a, b, c, x, y, lm, x2);</div><div class="line">}</div><div class="line"><span class="keyword">int</span> main()</div><div class="line">{</div><div class="line">	<span class="keyword">int</span> a, b, c, x, y;</div><div class="line">	<span class="built_in">cin</span> &gt;&gt; a &gt;&gt; b &gt;&gt; c &gt;&gt; x &gt;&gt; y;</div><div class="line">	<span class="keyword">if</span> (a == <span class="number">0</span>)</div><div class="line">	{</div><div class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="built_in">abs</span>(b*x - y + c) / <span class="built_in">sqrt</span>(b*b + c*c) &lt;&lt; endl;</div><div class="line">	}</div><div class="line">	<span class="keyword">else</span></div><div class="line">	{</div><div class="line">		<span class="keyword">double</span> x1 = x - <span class="number">10</span>, x2 = x + <span class="number">10</span>;</div><div class="line">		<span class="keyword">double</span> mid = x;</div><div class="line">		<span class="keyword">double</span> distancofmid = distances(a, b, c, x, y, mid);</div><div class="line">		<span class="keyword">while</span> (!(distances(a, b, c, x, y, x1) &gt; distancofmid && distances(a, b, c, x, y, x2) &gt; distancofmid))</div><div class="line">		{</div><div class="line">			x1 -= <span class="number">10</span>;</div><div class="line">			x2 += <span class="number">10</span>;</div><div class="line">		}</div><div class="line">		<span class="keyword">double</span> ansOfX = tri(a, b, c, x, y, x1, x2);</div><div class="line">		<span class="keyword">double</span> ansOfY = a*ansOfX*ansOfX + b*ansOfX + c;</div><div class="line">		<span class="built_in">cout</span> &lt;&lt; setiosflags(ios::fixed);</div><div class="line">		<span class="built_in">cout</span> &lt;&lt;setprecision(<span class="number">3</span>)&lt;&lt; <span class="built_in">sqrt</span>((ansOfX - x)*(ansOfX - x) + (ansOfY - y)*(ansOfY - y)) &lt;&lt; endl;</div><div class="line">	}</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">}</div></pre></td></tr></table></figure>

]]></content>
    <summary type="html">
    <![CDATA[<h2 id="题目1142：三分-三分求极值">题目1142：三分.三分求极值</h2>
<hr>
<p>时间限制:10000ms<br>单点时限:1000ms<br>内存限制:256MB<br><strong>描述</strong><br>这一次我们就简单一点了，题目在此：<]]>
    </summary>
    
      <category term="hihocoder" scheme="http://youngyangyang.com/tags/hihocoder/"/>
    
      <category term="一起刷hihocoder" scheme="http://youngyangyang.com/categories/%E4%B8%80%E8%B5%B7%E5%88%B7hihocoder/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[写在考试之后]]></title>
    <link href="http://youngyangyang.com/2015/04/03/afterexam/"/>
    <id>http://youngyangyang.com/2015/04/03/afterexam/</id>
    <published>2015-04-03T14:11:37.000Z</published>
    <updated>2015-04-03T14:18:50.000Z</updated>
    <content type="html"><![CDATA[<p>刚刚考完了微软实习生的在线笔试，昨天做了阿里的在线笔试，最近又在做阿里的大数据竞赛。感觉真的忙不过来，不过从这段时间的经历来看，自己有很多事要做。</p>
<blockquote>
<p>-巩固计算机语言：从几次笔试的过程来看，自己虽然说是略懂某种程序语言，但实在不是精通。而且除了微软之外，其他的公司都同时考几种语言，看来过去那种一种语言打天下的日子已经一去不复返了。<br>-刷题。今天的微软在线笔试就是很好的例子，从读题到写出程序只要二十分钟，但调试到AC却要一个小时，这说明题量不够，还需要刷题。<br>-还有自己一直要学的机器学习方面的知识还要巩固。一本书都没读完，的确进度太慢。要抓紧。</p>
</blockquote>
<p>三月结束了实习，总算给自己一个自由身。自己也要抓紧机会弥补。四月时间并不长，要有紧迫感。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>刚刚考完了微软实习生的在线笔试，昨天做了阿里的在线笔试，最近又在做阿里的大数据竞赛。感觉真的忙不过来，不过从这段时间的经历来看，自己有很多事要做。</p>
<blockquote>
<p>-巩固计算机语言：从几次笔试的过程来看，自己虽然说是略懂某种程序语言，但实在不是精通。]]>
    </summary>
    
      <category term="生活记录" scheme="http://youngyangyang.com/tags/%E7%94%9F%E6%B4%BB%E8%AE%B0%E5%BD%95/"/>
    
      <category term="生活点滴" scheme="http://youngyangyang.com/categories/%E7%94%9F%E6%B4%BB%E7%82%B9%E6%BB%B4/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[我的书籍]]></title>
    <link href="http://youngyangyang.com/2015/03/31/booklist/"/>
    <id>http://youngyangyang.com/2015/03/31/booklist/</id>
    <published>2015-03-31T12:01:20.000Z</published>
    <updated>2015-03-31T12:12:11.000Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p>最近在读：</p>
<p>《统计学习方法》 李航</p>
</blockquote>
<hr>
<blockquote>
<p>读过：</p>
<p>《C++ Primer》Stanley B.Lippman    Josee Lajoie     Barbara E.Moo</p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<blockquote>
<p>最近在读：</p>
<p>《统计学习方法》 李航</p>
</blockquote>
<hr>
<blockquote>
<p>读过：</p>
<p>《C++ Primer》Stanley B.Lippman    Josee Lajoie    ]]>
    </summary>
    
      <category term="books" scheme="http://youngyangyang.com/tags/books/"/>
    
      <category term="booklist" scheme="http://youngyangyang.com/categories/booklist/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[hiho1000]]></title>
    <link href="http://youngyangyang.com/2015/01/30/hiho1000/"/>
    <id>http://youngyangyang.com/2015/01/30/hiho1000/</id>
    <published>2015-01-30T06:10:20.000Z</published>
    <updated>2015-03-27T02:50:39.000Z</updated>
    <content type="html"><![CDATA[<p>题目名称：A+B</p>
<p>时间限制:1000ms<br>单点时限:1000ms<br>内存限制:256MB</p>
<p>描述</p>
<p>求两个整数A+B的和</p>
<p>输入</p>
<p>输入包含多组数据。<br>每组数据包含两个整数A(1 ≤ A ≤ 100)和B(1 ≤ A ≤ 100)。</p>
<p>输出</p>
<p>对于每组数据输出A+B的和。</p>
<p>样例输入</p>
<blockquote>
<p>1 2<br>3 4</p>
</blockquote>
<p>样例输出</p>
<blockquote>
<p>3<br>7</p>
</blockquote>
<p>我的分析</p>
<blockquote>
<p>这道题很简单啦，就是给大家学会怎么使用这个OnlineJudge平台的练手题目而已。基本的C++语法没有问题就OK啦。</p>
</blockquote>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;iostream&gt;</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"></div><div class="line"><span class="keyword">int</span> main()</div><div class="line">{</div><div class="line">    <span class="keyword">int</span> a,b;</div><div class="line">    <span class="keyword">while</span> ((<span class="built_in">cin</span>&gt;&gt;a&gt;&gt;b)){</div><div class="line">        <span class="built_in">cout</span>&lt;&lt;(a+b)&lt;&lt;endl;</div><div class="line">    }</div><div class="line">    </div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">}</div></pre></td></tr></table></figure>

]]></content>
    <summary type="html">
    <![CDATA[<p>题目名称：A+B</p>
<p>时间限制:1000ms<br>单点时限:1000ms<br>内存限制:256MB</p>
<p>描述</p>
<p>求两个整数A+B的和</p>
<p>输入</p>
<p>输入包含多组数据。<br>每组数据包含两个整数A(1 ≤ A ≤ 10]]>
    </summary>
    
      <category term="hihocoder" scheme="http://youngyangyang.com/tags/hihocoder/"/>
    
      <category term="一起刷hihocoder" scheme="http://youngyangyang.com/categories/%E4%B8%80%E8%B5%B7%E5%88%B7hihocoder/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[我的第一篇文章]]></title>
    <link href="http://youngyangyang.com/2014/12/30/my-new-post/"/>
    <id>http://youngyangyang.com/2014/12/30/my-new-post/</id>
    <published>2014-12-30T10:42:20.000Z</published>
    <updated>2015-01-07T12:45:33.000Z</updated>
    <content type="html"><![CDATA[<h1 id="这是我的第一篇文章">这是我的第一篇文章</h1>
<p>markdown的语法怎么这么别扭，看起来一点都不舒服</p>
<h2 id="要不来总结一下2014年吧">要不来总结一下2014年吧</h2>
<h3 id="我才没那么无聊呢">我才没那么无聊呢</h3>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="这是我的第一篇文章">这是我的第一篇文章</h1>
<p>markdown的语法怎么这么别扭，看起来一点都不舒服</p>
<h2 id="要不来总结一下2014年吧">要不来总结一下2014年吧</h2>
<h3 id="我才没那么无聊呢">我才没那么无聊呢</h]]>
    </summary>
    
      <category term="生活记录" scheme="http://youngyangyang.com/tags/%E7%94%9F%E6%B4%BB%E8%AE%B0%E5%BD%95/"/>
    
      <category term="blog" scheme="http://youngyangyang.com/categories/blog/"/>
    
  </entry>
  
</feed>
